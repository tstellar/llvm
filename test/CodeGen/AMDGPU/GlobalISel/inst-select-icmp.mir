# RUN: llc -march=amdgcn -mcpu=fiji -run-pass=instruction-select -verify-machineinstrs -global-isel %s -o - | FileCheck %s -check-prefixes=GCN

--- |
  define amdgpu_kernel void @icmp_ss(i32 addrspace(1)* %global0) {ret void}
  define amdgpu_kernel void @icmp_sv(i32 addrspace(1)* %global1) {ret void}
  define amdgpu_kernel void @icmp_vs(i32 addrspace(1)* %global1) {ret void}
  define amdgpu_kernel void @icmp_vv(i32 addrspace(1)* %global1) {ret void}
...
---

name:            icmp_ss
legalized:       true
regBankSelected: true

# GCN-LABEL: name: icmp_ss
# GCN: [[S0:%[0-9]+]] = COPY %sgpr0
# GCN: [[S1:%[0-9]+]] = COPY %sgpr1
# GCN: S_CMP_GE_U32 [[S0]], [[S1]]

body: |
  bb.0:
    liveins: %sgpr0, %sgpr1, %vgpr3_vgpr4
    %0:sgpr(s32) = COPY %sgpr0
    %1:sgpr(s32) = COPY %sgpr1
    %2:vgpr(s64) = COPY %vgpr3_vgpr4
    %3:sgpr(s32) = G_CONSTANT i32 0
    %4:sgpr(s32) = G_CONSTANT i32 1
    %5:scc(s1) = G_ICMP intpred(uge), %0, %1
    %6:sgpr(s32) = G_SELECT %5, %3, %4
    G_STORE %6, %2 :: (store 4 into %ir.global0)
...

name:            icmp_sv
legalized:       true
regBankSelected: true

# GCN-LABEL: name: icmp_sv
# GCN: [[S0:%[0-9]+]] = COPY %sgpr0
# GCN: [[V0:%[0-9]+]] = COPY %vgpr0
# GCN: V_CMP_GE_U32_e64 [[S0]], [[V0]]

body: |
  bb.0:
    liveins: %sgpr0, %vgpr0, %vgpr3_vgpr4
    %0:sgpr(s32) = COPY %sgpr0
    %1:vgpr(s32) = COPY %vgpr0
    %2:vgpr(s64) = COPY %vgpr3_vgpr4
    %3:vgpr(s32) = G_CONSTANT i32 0
    %4:vgpr(s32) = G_CONSTANT i32 1
    %5:sgpr(s1) = G_ICMP intpred(uge), %0, %1
    %6:vgpr(s32) = G_SELECT %5, %3, %4
    G_STORE %6, %2 :: (store 4 into %ir.global1)

...

name:            icmp_vs
legalized:       true
regBankSelected: true

# GCN-LABEL: name: icmp_vs
# GCN: [[S0:%[0-9]+]] = COPY %sgpr0
# GCN: [[V0:%[0-9]+]] = COPY %vgpr0
# GCN: V_CMP_GE_U32_e64 [[V0]], [[S0]]

body: |
  bb.0:
    liveins: %sgpr0, %vgpr0, %vgpr3_vgpr4
    %0:sgpr(s32) = COPY %sgpr0
    %1:vgpr(s32) = COPY %vgpr0
    %2:vgpr(s64) = COPY %vgpr3_vgpr4
    %3:vgpr(s32) = G_CONSTANT i32 0
    %4:vgpr(s32) = G_CONSTANT i32 1
    %5:sgpr(s1) = G_ICMP intpred(uge), %1, %0
    %6:vgpr(s32) = G_SELECT %5, %3, %4
    G_STORE %6, %2 :: (store 4 into %ir.global1)

...

name:            icmp_vv
legalized:       true
regBankSelected: true

# GCN-LABEL: name: icmp_vv
# GCN: [[V0:%[0-9]+]] = COPY %vgpr0
# GCN: [[V1:%[0-9]+]] = COPY %vgpr1
# GCN: V_CMP_GE_U32_e64 [[V0]], [[V1]]

body: |
  bb.0:
    liveins: %vgpr0, %vgpr1, %vgpr3_vgpr4
    %0:sgpr(s32) = COPY %vgpr0
    %1:vgpr(s32) = COPY %vgpr1
    %2:vgpr(s64) = COPY %vgpr3_vgpr4
    %3:vgpr(s32) = G_CONSTANT i32 0
    %4:vgpr(s32) = G_CONSTANT i32 1
    %5:sgpr(s1) = G_ICMP intpred(uge), %0, %1
    %6:vgpr(s32) = G_SELECT %5, %3, %4
    G_STORE %6, %2 :: (store 4 into %ir.global1)


---
